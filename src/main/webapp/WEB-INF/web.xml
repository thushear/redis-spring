<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
 <display-name>redis-shopin</display-name>

    <servlet>
        <servlet-name>perf4j</servlet-name>
        <servlet-class>org.perf4j.log4j.servlet.GraphingServlet</servlet-class>
        <!--
          The graphNames parameter determines which graphs to expose. The
          param-value should be a comma-separated list of the
          appender NAMES as defined in the log4j.xml file.
        -->
        <init-param>
            <param-name>graphNames</param-name>
            <param-value>graphExecutionTimes,graphExecutionTPS</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>perf4j</servlet-name>
        <url-pattern>/perf4j</url-pattern>
    </servlet-mapping>


    <!-- &lt;!&ndash;spring 1.0&ndash;&gt;
    <context-param>
        <param-name>configUrl</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>
    &lt;!&ndash; This servlet must be loaded first
  to create the WebApplicationContext.
  This is the parent context shared by all servlets
  in this web application.
  &ndash;&gt;
     <servlet>
         <servlet-name>config</servlet-name>
         <servlet-class>com.interface21.web.context.ContextLoaderServlet</servlet-class>
         <init-param>
             <param-name>contextClass</param-name>
             <param-value>com.interface21.web.context.support.XmlWebApplicationContext</param-value>
         </init-param>
         &lt;!&ndash; This is essential. Everything else depends on this servlet. &ndash;&gt;
         <load-on-startup>1</load-on-startup>
     </servlet>

    <servlet>
        <servlet-name>ticket</servlet-name>
        <servlet-class>com.interface21.web.servlet.ControllerServlet</servlet-class>

        &lt;!&ndash; Causes informative attributes to be placed in request. Can be
         commented out in production, but won't affect performance much or compromise security
         &ndash;&gt;
        <init-param>
            <param-name>debug</param-name>
            <param-value>false</param-value>
        </init-param>

        <load-on-startup>2</load-on-startup>
    </servlet>


    <servlet-mapping>
        <servlet-name>ticket</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>ticket</servlet-name>
        <url-pattern>*.pdf</url-pattern>
    </servlet-mapping>

-->
    <!--<context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/application-config.xml</param-value>
    </context-param>
    <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <servlet>
      <servlet-name>dispatcherServlet</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <init-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/mvc-config.xml</param-value>
      </init-param>
      <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
      <servlet-name>dispatcherServlet</servlet-name>
      <url-pattern>/</url-pattern>
    </servlet-mapping>-->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>